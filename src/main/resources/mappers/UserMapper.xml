<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crafty.takeout.model.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.crafty.takeout.model.pojo.User">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="phone" jdbcType="VARCHAR" property="phone"/>
    <result column="sex" jdbcType="VARCHAR" property="sex"/>
    <result column="id_number" jdbcType="VARCHAR" property="idNumber"/>
    <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
    <result column="status" jdbcType="INTEGER" property="status"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, phone, sex, id_number, avatar, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="checkLogin" resultType="com.crafty.takeout.model.pojo.User">
    select
    <include refid="Base_Column_List" />
    from user
    where name = #{username} and password = #{password}
  </select>
  <select id="selectByUsername" resultType="com.crafty.takeout.model.pojo.User">
    select
    <include refid="Base_Column_List"/>
    from user
    where name = #{username}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete
    from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.crafty.takeout.model.pojo.User">
    insert into user (id, `name`, phone,
                      sex, id_number, avatar,
                      `status`, `password`)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
            #{sex,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR},
            #{status,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.crafty.takeout.model.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crafty.takeout.model.pojo.User">
    update user
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crafty.takeout.model.pojo.User">
    update user
    set `name`    = #{name,jdbcType=VARCHAR},
        phone     = #{phone,jdbcType=VARCHAR},
        sex       = #{sex,jdbcType=VARCHAR},
        id_number = #{idNumber,jdbcType=VARCHAR},
        avatar    = #{avatar,jdbcType=VARCHAR},
        `status`  = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>